name: Check AWS and Run Tests After Deploy

on:
  push:
    branches:
      - main

jobs:
  wait-and-check:
    runs-on: ubuntu-latest

    steps:
      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Obtener el último executionId actual
        id: get_execution
        run: |
          echo "🛰️ Obteniendo último executionId del pipeline..."
          EXEC_ID=$(aws codepipeline list-pipeline-executions \
            --pipeline-name git-hub-blade \
            --max-items 1 \
            --query "pipelineExecutionSummaries[0].pipelineExecutionId" \
            --output text 2>/dev/null || echo "")

          echo "Execution ID detectado: $EXEC_ID"

          if [[ "$EXEC_ID" == "None" || -z "$EXEC_ID" ]]; then
            echo "❌ No se pudo obtener un executionId válido. Abortando..."
            exit 1
          fi

          echo "execution_id=$EXEC_ID" >> "$GITHUB_OUTPUT"

      - name: Esperar a que termine el deploy
        id: esperar
        run: |
          PIPELINE_NAME="git-hub-blade"
          EXECUTION_ID="${{ steps.get_execution.outputs.execution_id }}"
          MAX_INTENTOS=40   # Total: 40 * 30s = 20 minutos
          INTERVALO=30
          INTENTO=1

          while [ "$INTENTO" -le "$MAX_INTENTOS" ]; do
            echo "⏳ Intento $INTENTO/$MAX_INTENTOS - Verificando estado de ejecución..."

            STATUS=$(aws codepipeline get-pipeline-execution \
              --pipeline-name "$PIPELINE_NAME" \
              --pipeline-execution-id "$EXECUTION_ID" \
              --query "pipelineExecution.status" \
              --output text 2>/dev/null || echo "Unknown")

            echo "Estado actual: $STATUS"

            if [[ "$STATUS" == "Succeeded" ]]; then
              echo "✅ Despliegue exitoso dete
